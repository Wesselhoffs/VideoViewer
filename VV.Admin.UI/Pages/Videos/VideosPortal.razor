@inject IAdminService AdminService

@if (!String.IsNullOrWhiteSpace(Alert))
{
	<div class="d-flex m-3">
		<div class="alert alert-danger alert-dismissible fade show" role="alert">
			<strong>@Alert</strong>
			<button type="button" @onclick="CloseAlert" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>
}

<div class="d-flex m-3">
	<button type="button" class="btn btn-outline-info p-3 me-3" @onclick="()=>ChangePageType(PageType.Index)">Index</button>
	<button type="button" class="btn btn-outline-info p-3" @onclick="()=>ChangePageType(PageType.Create)">Create</button>
</div>

<VideosIndex OnClick="OnClick" Model="Model"></VideosIndex>

@code {
	public string Alert { get; set; } = "";
	public string Navigation { get; set; } = PageType.Index;
	public List<VideoDTO> Model { get; set; } = new();

	public void ChangePageType(string pageType)
	{
		Navigation = pageType;
	}

	public void CloseAlert()
	{
		Alert = "";
	}

	async Task OnClick(ClickModel model)
	{
		if (model.pageType.Equals(PageType.Edit) || model.pageType.Equals(PageType.Delete))

		ChangePageType(model.pageType);
	}


	protected override async Task OnInitializedAsync()
	{
		Alert = "test";
		Model = await AdminService.GetAsync<VideoDTO>("Videos");
	}
}
